{"C:\\Users\\mohammadasif\\Desktop\\Code\\PatternAPI\\src\\PatternController\\TransformPattern.ts":{"path":"C:\\Users\\mohammadasif\\Desktop\\Code\\PatternAPI\\src\\PatternController\\TransformPattern.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":0},"end":{"line":12,"column":34}},"14":{"start":{"line":13,"column":19},"end":{"line":13,"column":50}},"15":{"start":{"line":14,"column":26},"end":{"line":14,"column":54}},"16":{"start":{"line":15,"column":26},"end":{"line":19,"column":1}},"17":{"start":{"line":16,"column":18},"end":{"line":16,"column":38}},"18":{"start":{"line":17,"column":16},"end":{"line":17,"column":40}},"19":{"start":{"line":18,"column":4},"end":{"line":18,"column":15}},"20":{"start":{"line":20,"column":26},"end":{"line":23,"column":1}},"21":{"start":{"line":21,"column":16},"end":{"line":21,"column":78}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":15}},"23":{"start":{"line":24,"column":25},"end":{"line":41,"column":2}},"24":{"start":{"line":24,"column":38},"end":{"line":41,"column":2}},"25":{"start":{"line":25,"column":22},"end":{"line":25,"column":109}},"26":{"start":{"line":26,"column":24},"end":{"line":26,"column":62}},"27":{"start":{"line":27,"column":4},"end":{"line":28,"column":101}},"28":{"start":{"line":29,"column":14},"end":{"line":29,"column":16}},"29":{"start":{"line":30,"column":17},"end":{"line":30,"column":37}},"30":{"start":{"line":31,"column":4},"end":{"line":38,"column":5}},"31":{"start":{"line":33,"column":12},"end":{"line":33,"column":49}},"32":{"start":{"line":34,"column":12},"end":{"line":34,"column":18}},"33":{"start":{"line":36,"column":12},"end":{"line":36,"column":83}},"34":{"start":{"line":37,"column":12},"end":{"line":37,"column":18}},"35":{"start":{"line":39,"column":4},"end":{"line":39,"column":28}},"36":{"start":{"line":40,"column":4},"end":{"line":40,"column":15}},"37":{"start":{"line":42,"column":0},"end":{"line":42,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":15,"column":26},"end":{"line":15,"column":27}},"loc":{"start":{"line":15,"column":37},"end":{"line":19,"column":1}},"line":15},"8":{"name":"(anonymous_8)","decl":{"start":{"line":20,"column":26},"end":{"line":20,"column":27}},"loc":{"start":{"line":20,"column":109},"end":{"line":23,"column":1}},"line":20},"9":{"name":"(anonymous_9)","decl":{"start":{"line":24,"column":25},"end":{"line":24,"column":26}},"loc":{"start":{"line":24,"column":38},"end":{"line":41,"column":2}},"line":24},"10":{"name":"(anonymous_10)","decl":{"start":{"line":24,"column":72},"end":{"line":24,"column":73}},"loc":{"start":{"line":24,"column":85},"end":{"line":41,"column":1}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":20,"column":34},"end":{"line":20,"column":72}},"type":"default-arg","locations":[{"start":{"line":20,"column":46},"end":{"line":20,"column":72}}],"line":20},"6":{"loc":{"start":{"line":20,"column":74},"end":{"line":20,"column":104}},"type":"default-arg","locations":[{"start":{"line":20,"column":82},"end":{"line":20,"column":104}}],"line":20},"7":{"loc":{"start":{"line":25,"column":22},"end":{"line":25,"column":109}},"type":"cond-expr","locations":[{"start":{"line":25,"column":52},"end":{"line":25,"column":104}},{"start":{"line":25,"column":107},"end":{"line":25,"column":109}}],"line":25},"8":{"loc":{"start":{"line":27,"column":18},"end":{"line":28,"column":100}},"type":"cond-expr","locations":[{"start":{"line":28,"column":8},"end":{"line":28,"column":27}},{"start":{"line":28,"column":31},"end":{"line":28,"column":99}}],"line":27},"9":{"loc":{"start":{"line":28,"column":31},"end":{"line":28,"column":99}},"type":"cond-expr","locations":[{"start":{"line":28,"column":57},"end":{"line":28,"column":68}},{"start":{"line":28,"column":71},"end":{"line":28,"column":99}}],"line":28},"10":{"loc":{"start":{"line":31,"column":4},"end":{"line":38,"column":5}},"type":"switch","locations":[{"start":{"line":32,"column":8},"end":{"line":34,"column":18}},{"start":{"line":35,"column":8},"end":{"line":37,"column":18}}],"line":31}},"s":{"0":1,"1":0,"2":0,"3":7,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":7,"12":1,"13":1,"14":1,"15":1,"16":1,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":1,"24":7,"25":7,"26":7,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1},"f":{"0":7,"1":0,"2":0,"3":7,"4":0,"5":0,"6":0,"7":0,"8":0,"9":7,"10":7},"b":{"0":[1,1,1],"1":[0,0],"2":[7,7],"3":[0,0],"4":[7,7],"5":[0],"6":[0],"7":[0,7],"8":[0,0],"9":[0,0],"10":[0,0]},"inputSourceMap":{"version":3,"file":"C:/Users/mohammadasif/Desktop/Code/PatternAPI/src/PatternController/TransformPattern.ts","sources":["C:/Users/mohammadasif/Desktop/Code/PatternAPI/src/PatternController/TransformPattern.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,mDAA6C;AAE7C,uDAAmD;AAQnD,MAAM,iBAAiB,GAAG,CAAC,KAAa,EAAW,EAAE;IACjD,MAAM,KAAK,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC;IACnC,MAAM,GAAG,GAAI,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;IACtC,OAAO,GAAG,CAAC;AACf,CAAC,CAAC;AAQD,MAAM,iBAAiB,GAAG,CAAC,KAAa,EAAE,SAAS,GAAE,gBAAK,CAAC,SAAS,EAAE,KAAK,GAAE,gBAAK,CAAC,KAAK,EAAU,EAAE;IACjG,MAAM,GAAG,GAAI,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC5E,OAAO,GAAG,CAAC;AACf,CAAC,CAAC;AAMK,MAAM,gBAAgB,GAAG,CAAM,OAA2B,EAAmB,EAAE;IAClF,IAAI,WAAW,GAAG,OAAO,CAAC,mBAAmB,CAAA,CAAC,CAAC,IAAA,gCAAc,EAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAClF,MAAM,WAAW,GAAG,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;IAC3D,WAAW,GAAG,OAAO,CAAC,WAAW,IAAI,SAAS,CAAC,CAAC;QACpB,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,gBAAK,CAAC,WAAW,CAAC,CAAC;IAC9G,IAAI,GAAG,GAAG,EAAE,CAAC;IACb,MAAM,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAClC,QAAO,IAAI,EAAC;QACR,KAAK,CAAC;YACF,GAAG,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;YACrC,MAAM;QACV,KAAK,CAAC;YACF,GAAG,GAAG,iBAAiB,CAAC,WAAW,EAAE,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;YACvE,MAAM;KACb;IACD,GAAG,GAAG,WAAW,GAAG,GAAG,CAAC;IACxB,OAAO,GAAG,CAAC;AACf,CAAC,CAAA,CAAC;AAjBW,QAAA,gBAAgB,oBAiB3B","sourcesContent":["import { Phone } from \"../constant/Constant\";\r\nimport { MObileNumberDetail } from \"../Models/MobileNumDetails\";\r\nimport { initialPattern } from \"./ValidatePattern\";\r\n\r\n\r\n/**\r\n * @param {phone} string - contain only main number\r\n * @param {countryCode} string - contain contry Code\r\n * @returns {string} - return one of the accepted format  // +91-1234567890\r\n */\r\nconst transformPattern1 = (phone: string ): string => {\r\n    const regex = new RegExp(/(-| )/g);\r\n    const res =  phone.replace(regex, '');\r\n    return res;\r\n};\r\n\r\n/**\r\n * @param {phone} string - contain only main number\r\n * @param {separator} string - contain - or space\r\n * @param {index} string - contain index where to put the separator\r\n * @returns {string} - return one of the accepted format  // +91-123-4567890\r\n */\r\n const transformPattern2 = (phone: string, separator= Phone.Separator, index= Phone.Index): string => {\r\n    const res =  phone.substring(0, index) + separator + phone.substring(index);\r\n    return res;\r\n};\r\n\r\n/**\r\n * @param {MObileNumberDetail} request - All detail of mobile number\r\n * @returns {string} - return the transformed number // +91-123-4567890\r\n */\r\nexport const transformPattern = async(request: MObileNumberDetail): Promise<string> => {\r\n    let countryCode = request.countryCodeIncluded? initialPattern(request.phone) : '';\r\n    const main_number = request.phone.replace(countryCode, '');\r\n    countryCode = request.countryCode != undefined ? \r\n                                request.countryCode : (countryCode.length >= 2 ? countryCode : Phone.CountryCode);\r\n    let res = '';\r\n    const type = Number(request.type);\r\n    switch(type){\r\n        case 1: \r\n            res = transformPattern1(main_number);\r\n            break;\r\n        case 2:\r\n            res = transformPattern2(main_number, request.separator, request.index);\r\n            break;\r\n    }\r\n    res = countryCode + res;\r\n    return res;\r\n};"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3ad3417cf7e02e9a2c5f42bc2bec71d96aa492ca","contentHash":"81403c5f939fc6d5c1d92c9a2e1d2a2884a5868cf3c3ad6a02b8980705fbbbcf"},"C:\\Users\\mohammadasif\\Desktop\\Code\\PatternAPI\\src\\constant\\Constant.ts":{"path":"C:\\Users\\mohammadasif\\Desktop\\Code\\PatternAPI\\src\\constant\\Constant.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":75}},"2":{"start":{"line":4,"column":14},"end":{"line":14,"column":1}},"3":{"start":{"line":15,"column":0},"end":{"line":15,"column":22}},"4":{"start":{"line":16,"column":21},"end":{"line":22,"column":1}},"5":{"start":{"line":23,"column":0},"end":{"line":23,"column":36}},"6":{"start":{"line":24,"column":27},"end":{"line":27,"column":1}},"7":{"start":{"line":28,"column":0},"end":{"line":28,"column":48}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"C:/Users/mohammadasif/Desktop/Code/PatternAPI/src/constant/Constant.ts","sources":["C:/Users/mohammadasif/Desktop/Code/PatternAPI/src/constant/Constant.ts"],"names":[],"mappings":";;;AAAA,MAAM,KAAK,GAAG;IAEV,SAAS,EAAG,CAAC;IACb,SAAS,EAAG,EAAE;IACd,YAAY,EAAG,EAAE;IACjB,WAAW,EAAG,MAAM;IACpB,SAAS,EAAC,GAAG;IACb,KAAK,EAAE,CAAC;IACR,SAAS,EAAC,0EAA0E;QAC1E,2EAA2E;QAC3E,wFAAwF;CACrG,CAAC;AAgBM,sBAAK;AAdb,MAAM,YAAY,GAAG;IACjB,aAAa,EAAG,8CAA8C;IAC9D,UAAU,EAAG,8CAA8C;IAC3D,kBAAkB,EAAE,sEAAsE;IAC1F,iBAAiB,EAAE,6CAA6C;IAChE,aAAa,EAAE,wEAAwE;CAC1F,CAAC;AAQa,oCAAY;AAN3B,MAAM,kBAAkB,GAAG;IACvB,iBAAiB,EAAE,2DAA2D;IAC9E,cAAc,EAAE,kCAAkC;CACrD,CAAC;AAG2B,gDAAkB","sourcesContent":["const Phone = {\r\n\r\n    MinLength : 7,\r\n    MaxLength : 16,\r\n    NomralLength : 10,\r\n    CountryCode : \"+91-\",\r\n    Separator:\"-\",\r\n    Index: 2,\r\n    BasicInfo:'Mobile Number Format: [+][country code][area code][local phone number]\\n' +\r\n              'Country Code: 91\\nArea Code: Between 2 to 4\\nLocal Phone Number: 6 to 8\\n' + \r\n              'Example: 9760064000, +91-9760064000, 919760064000, +91-(976)0064000, +91-(976)006-4000'\r\n};\r\n\r\nconst ErrorMessage = { \r\n    INVALID_PHONE : \"Phone Number length is not in allowed range.\",\r\n    INVALID_CC : \"Country Name length is not in allowed range.\",\r\n    INVALID_TYPE_VALUE: \"Property type must be a number and it's value must be either 1 or 2.\",\r\n    INVALID_SEPARATOR: \"Separator Can not be more than 1 character.\",\r\n    INVALID_INDEX: \"Property index must be a number and should be in range between 2 to 5.\"\r\n};\r\n\r\nconst ErrorMessageStatus = {\r\n    NOT_VALID_PATTERN: \"Phone number Pattern is not valid. Cannot be transformed.\",\r\n    INVALID_NUMBER: \"Not a Valid Phone Number Pattern\"\r\n};\r\n\r\n\r\nexport {Phone, ErrorMessage, ErrorMessageStatus};"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"162afdbbd7e0faf3863b08134a7a3ac5fa247bf7","contentHash":"f94485460ddc89add9bf96ea0a40b2408c8710edd6f5f4c2a201c33eb9ac8cae"},"C:\\Users\\mohammadasif\\Desktop\\Code\\PatternAPI\\src\\PatternController\\ValidatePattern.ts":{"path":"C:\\Users\\mohammadasif\\Desktop\\Code\\PatternAPI\\src\\PatternController\\ValidatePattern.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":0},"end":{"line":12,"column":55}},"14":{"start":{"line":13,"column":19},"end":{"line":13,"column":50}},"15":{"start":{"line":14,"column":23},"end":{"line":18,"column":1}},"16":{"start":{"line":15,"column":27},"end":{"line":15,"column":66}},"17":{"start":{"line":16,"column":16},"end":{"line":16,"column":43}},"18":{"start":{"line":17,"column":4},"end":{"line":17,"column":37}},"19":{"start":{"line":19,"column":0},"end":{"line":19,"column":40}},"20":{"start":{"line":20,"column":17},"end":{"line":22,"column":1}},"21":{"start":{"line":21,"column":4},"end":{"line":21,"column":48}},"22":{"start":{"line":23,"column":17},"end":{"line":31,"column":1}},"23":{"start":{"line":24,"column":23},"end":{"line":24,"column":44}},"24":{"start":{"line":25,"column":25},"end":{"line":25,"column":67}},"25":{"start":{"line":26,"column":4},"end":{"line":29,"column":5}},"26":{"start":{"line":27,"column":23},"end":{"line":27,"column":84}},"27":{"start":{"line":28,"column":8},"end":{"line":28,"column":62}},"28":{"start":{"line":30,"column":4},"end":{"line":30,"column":17}},"29":{"start":{"line":32,"column":17},"end":{"line":34,"column":1}},"30":{"start":{"line":33,"column":4},"end":{"line":33,"column":71}},"31":{"start":{"line":35,"column":21},"end":{"line":39,"column":2}},"32":{"start":{"line":35,"column":54},"end":{"line":39,"column":2}},"33":{"start":{"line":36,"column":20},"end":{"line":36,"column":61}},"34":{"start":{"line":37,"column":24},"end":{"line":37,"column":50}},"35":{"start":{"line":38,"column":4},"end":{"line":38,"column":83}},"36":{"start":{"line":40,"column":0},"end":{"line":40,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":14,"column":23},"end":{"line":14,"column":24}},"loc":{"start":{"line":14,"column":34},"end":{"line":18,"column":1}},"line":14},"8":{"name":"(anonymous_8)","decl":{"start":{"line":20,"column":17},"end":{"line":20,"column":18}},"loc":{"start":{"line":20,"column":28},"end":{"line":22,"column":1}},"line":20},"9":{"name":"(anonymous_9)","decl":{"start":{"line":23,"column":17},"end":{"line":23,"column":18}},"loc":{"start":{"line":23,"column":28},"end":{"line":31,"column":1}},"line":23},"10":{"name":"(anonymous_10)","decl":{"start":{"line":32,"column":17},"end":{"line":32,"column":18}},"loc":{"start":{"line":32,"column":28},"end":{"line":34,"column":1}},"line":32},"11":{"name":"(anonymous_11)","decl":{"start":{"line":35,"column":21},"end":{"line":35,"column":22}},"loc":{"start":{"line":35,"column":54},"end":{"line":39,"column":2}},"line":35},"12":{"name":"(anonymous_12)","decl":{"start":{"line":35,"column":88},"end":{"line":35,"column":89}},"loc":{"start":{"line":35,"column":101},"end":{"line":39,"column":1}},"line":35}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":17,"column":11},"end":{"line":17,"column":36}},"type":"cond-expr","locations":[{"start":{"line":17,"column":25},"end":{"line":17,"column":31}},{"start":{"line":17,"column":34},"end":{"line":17,"column":36}}],"line":17},"6":{"loc":{"start":{"line":26,"column":4},"end":{"line":29,"column":5}},"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":29,"column":5}},{"start":{"line":26,"column":4},"end":{"line":29,"column":5}}],"line":26},"7":{"loc":{"start":{"line":26,"column":8},"end":{"line":26,"column":42}},"type":"binary-expr","locations":[{"start":{"line":26,"column":8},"end":{"line":26,"column":23}},{"start":{"line":26,"column":27},"end":{"line":26,"column":42}}],"line":26},"8":{"loc":{"start":{"line":35,"column":29},"end":{"line":35,"column":49}},"type":"default-arg","locations":[{"start":{"line":35,"column":44},"end":{"line":35,"column":49}}],"line":35},"9":{"loc":{"start":{"line":36,"column":20},"end":{"line":36,"column":61}},"type":"cond-expr","locations":[{"start":{"line":36,"column":35},"end":{"line":36,"column":56}},{"start":{"line":36,"column":59},"end":{"line":36,"column":61}}],"line":36},"10":{"loc":{"start":{"line":38,"column":11},"end":{"line":38,"column":82}},"type":"binary-expr","locations":[{"start":{"line":38,"column":11},"end":{"line":38,"column":32}},{"start":{"line":38,"column":36},"end":{"line":38,"column":57}},{"start":{"line":38,"column":61},"end":{"line":38,"column":82}}],"line":38}},"s":{"0":1,"1":0,"2":0,"3":79,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":79,"11":79,"12":1,"13":1,"14":1,"15":1,"16":79,"17":79,"18":79,"19":1,"20":1,"21":79,"22":1,"23":79,"24":79,"25":79,"26":79,"27":79,"28":0,"29":1,"30":79,"31":1,"32":79,"33":79,"34":79,"35":79,"36":1},"f":{"0":79,"1":0,"2":0,"3":79,"4":0,"5":0,"6":79,"7":79,"8":79,"9":79,"10":79,"11":79,"12":79},"b":{"0":[1,1,1],"1":[0,0],"2":[79,79],"3":[79,0],"4":[79,79],"5":[79,0],"6":[79,0],"7":[79,79],"8":[0],"9":[79,0],"10":[79,79,79]},"inputSourceMap":{"version":3,"file":"C:/Users/mohammadasif/Desktop/Code/PatternAPI/src/PatternController/ValidatePattern.ts","sources":["C:/Users/mohammadasif/Desktop/Code/PatternAPI/src/PatternController/ValidatePattern.ts"],"names":[],"mappings":";;;;;;;;;;;;AACA,mDAA2D;AAW3D,MAAM,cAAc,GAAG,CAAC,KAAa,EAAS,EAAE;IACxC,MAAM,cAAc,GAAG,IAAI,MAAM,CAAC,2BAA2B,CAAC,CAAC;IAC/D,MAAM,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;IACxC,OAAQ,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAE;AAC3C,CAAC,CAAC;AAwDqB,wCAAc;AAhDrC,MAAM,QAAQ,GAAG,CAAC,KAAa,EAAW,EAAE;IACpC,OAAO,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACpD,CAAC,CAAC;AAQF,MAAM,QAAQ,GAAG,CAAC,KAAa,EAAW,EAAE;IACpC,MAAM,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IACzC,MAAM,YAAY,GAAG,gBAAK,CAAC,YAAY,GAAG,UAAU,CAAC;IACrD,IAAG,UAAU,IAAI,CAAC,IAAI,UAAU,IAAI,CAAC,EAAC;QAC9B,MAAM,MAAM,GAAG,SAAS,GAAG,UAAU,GAAI,cAAc,GAAG,YAAY,GAAG,IAAI,CAAC;QAC9E,OAAO,IAAI,MAAM,CAAC,KAAK,GAAG,MAAM,GAAG,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC7D;IACD,OAAO,KAAK,CAAC;AACrB,CAAC,CAAC;AAQF,MAAM,QAAQ,GAAG,CAAC,KAAa,EAAW,EAAE;IACpC,OAAO,IAAI,MAAM,CAAC,mCAAmC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC3E,CAAC,CAAC;AAUF,MAAM,YAAY,GAAG,CAAO,KAAa,EAAE,YAAY,GAAG,KAAK,EAAoB,EAAE;IAE7E,MAAM,OAAO,GAAG,YAAY,CAAC,CAAC,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAE1D,MAAM,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;IAE/C,OAAQ,QAAQ,CAAC,WAAW,CAAC,IAAI,QAAQ,CAAC,WAAW,CAAC,IAAI,QAAQ,CAAC,WAAW,CAAC,CAAC;AACxF,CAAC,CAAA,CAAC;AAGO,oCAAY","sourcesContent":["import express from 'express';\r\nimport { ErrorMessage, Phone } from '../constant/Constant';\r\nimport { ErrorModel } from '../Models/ErrorModel';\r\nimport { MObileNumberDetail } from \"../Models/MobileNumDetails\";\r\n\r\n\r\n/**\r\n * Validate the Country Code: 91, +91, 91-, +91-\r\n * @constructor\r\n * @param {string} phone - phone number send in request.\r\n * @return {string} - returns the country code\r\n */\r\nconst initialPattern = (phone: string):string => {       \r\n        const initialPattern = new RegExp(/^[+]?((91-)|(91))?(-| |)?/);\r\n        const res = phone.match(initialPattern);\r\n        return  res != null ? res[0] : '' ;  \r\n};\r\n\r\n/**\r\n * Validate the Basic Pattern\r\n * @constructor\r\n * @param {string} phone - phone number send in request.\r\n * @return {boolean} - returns true if validation successful\r\n */\r\nconst pattern1 = (phone: string): boolean => {\r\n        return new RegExp(/^[\\d]{10}$/).test(phone); \r\n};\r\n\r\n/**\r\n * Validate the Advanced Pattern\r\n * @constructor\r\n * @param {string} phone - phone number send in request.\r\n * @return {boolean} - returns true if validation successful\r\n */\r\nconst pattern2 = (phone: string): boolean => {\r\n        const firstIndex = phone.search(/(-| )/);\r\n        const remainingLen = Phone.NomralLength - firstIndex;\r\n        if(firstIndex >= 2 && firstIndex <= 5){\r\n                const regExp = \"^[\\\\d]{\" + firstIndex  + \"}(-| )[\\\\d]{\" + remainingLen + \"}$\";\r\n                return new RegExp(\"\\\\b\" + regExp + \"\\\\b\").test(phone);\r\n        }\r\n        return false;     \r\n};\r\n\r\n/**\r\n * Validate the More Advanced Pattern\r\n * @constructor\r\n * @param {string} phone - phone number send in request.\r\n * @return {boolean} - returns true if validation successful\r\n */\r\nconst pattern3 = (phone: string): boolean => {\r\n        return new RegExp(/^[\\d]{3}(-| )[\\d]{3}(-| )[\\d]{4}$/).test(phone);\r\n};\r\n\r\n\r\n/**\r\n * Validate the Basic Pattern\r\n * @constructor\r\n * @param {string} phone - phone number send in request.\r\n * @param {boolean} checkInitial - true if country-code send in request.\r\n * @return {boolean} - returns true if validation successful\r\n */\r\nconst checkPattern = async (phone: string, checkInitial = false): Promise<boolean> => {\r\n        //check and return the initial of number \r\n        const initial = checkInitial ? initialPattern(phone) : '';\r\n        //remove the initial from number\r\n        const main_number = phone.replace(initial, '');\r\n        //remove the initial from the phone number and then verify the remaining\r\n        return  pattern1(main_number) || pattern2(main_number) || pattern3(main_number);\r\n};\r\n\r\n\r\nexport { checkPattern, initialPattern};"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"35d527a23fb80570af1b49afa3c263818f58a349","contentHash":"781fafd242f563ed18c2a04d0733f29bdd9f5d4619145de99e3432ff1cb5a948"}}